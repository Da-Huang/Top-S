// Redo
vector<int> searchRange(int A[], int n, int target) {
  vector<int> res = {-1, -1};
  int first = 0;
  int last = n - 1;
  while ( first < last ) {
    const int mid = (first + last) / 2;
    if ( A[mid] < target ) first = mid + 1;
    else last = mid - 1; 
  }
  if ( A[first] >= target ) res[0] = first;
  else res[0] = first + 1;

  if ( first >= n || A[res[0]] != target ) {
    res[0] = res[1] = -1;
    return res;
  }

  first = res[0];
  last = n - 1;
  while ( first < last ) {
    const int mid = (first + last) / 2;
    if ( A[mid] <= target ) first = mid + 1;
    else last = mid - 1;
  }
  if ( A[first] > target ) res[1] = first;
  else res[1] = first + 1;
  res[1] --;
  return res;
}

